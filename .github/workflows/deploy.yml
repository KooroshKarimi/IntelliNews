name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  GCP_REGION: ${{ secrets.GCP_REGION }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: intellinews

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Verify authentication and project
        run: |
          echo "🔍 Verifying authentication and project access..."
          gcloud auth list --filter=status:ACTIVE --format="value(account)" | head -1
          gcloud config get-value project
          echo "✅ Authentication successful"

      - name: Enable required APIs
        run: |
          echo "🔧 Enabling required Google Cloud APIs..."
          gcloud services enable run.googleapis.com \
            artifactregistry.googleapis.com \
            cloudbuild.googleapis.com \
            cloudresourcemanager.googleapis.com
          echo "✅ APIs enabled"

      - name: Create Artifact Registry repository
        continue-on-error: true
        run: |
          echo "📦 Creating Artifact Registry repository..."
          gcloud artifacts repositories create app \
            --repository-format=docker \
            --location=${{ env.GCP_REGION }} \
            --description="IntelliNews container repository" \
            --project=${{ env.GCP_PROJECT_ID }}
          echo "✅ Repository ready"

      - name: Configure Docker for Artifact Registry
        run: |
          echo "🐳 Configuring Docker for Artifact Registry..."
          gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev --quiet
          echo "✅ Docker configured"

      - name: Build Docker image
        run: |
          IMAGE_URI="${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/app/${{ env.SERVICE_NAME }}:${{ github.sha }}"
          echo "🏗️ Building Docker image: $IMAGE_URI"
          
          # Build with BuildKit for better performance
          export DOCKER_BUILDKIT=1
          docker build \
            --tag "$IMAGE_URI" \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --progress=plain \
            .
          
          echo "✅ Docker build completed"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Push Docker image
        run: |
          echo "📤 Pushing Docker image..."
          docker push "$IMAGE_URI"
          echo "✅ Docker image pushed successfully"

      - name: Deploy to Cloud Run
        run: |
          echo "🚀 Deploying to Cloud Run..."
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image "$IMAGE_URI" \
            --region "${{ env.GCP_REGION }}" \
            --platform managed \
            --allow-unauthenticated \
            --port 8080 \
            --memory 512Mi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 5 \
            --timeout 300s \
            --set-env-vars="NODE_ENV=production" \
            --quiet
          echo "✅ Deployment completed"

      - name: Get service URL and test
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
            --region=${{ env.GCP_REGION }} \
            --format="value(status.url)")
          
          echo "🌐 Service URL: $SERVICE_URL"
          echo "🏥 Testing health endpoint..."
          
          # Test the health endpoint
          curl -f "$SERVICE_URL/health" || echo "⚠️ Health check failed, but service may still be working"
          
          echo "🎉 IntelliNews deployed successfully!"
          echo "📱 Access your app at: $SERVICE_URL"
          
          # Output for GitHub Actions summary
          echo "## 🚀 Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "- **Service URL**: $SERVICE_URL" >> $GITHUB_STEP_SUMMARY
          echo "- **Health Check**: $SERVICE_URL/health" >> $GITHUB_STEP_SUMMARY
          echo "- **Region**: ${{ env.GCP_REGION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: $IMAGE_URI" >> $GITHUB_STEP_SUMMARY
