name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ main ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    env:
      GCP_REGION: ${{ secrets.GCP_REGION }}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      SERVICE_NAME: intellinews

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Debug - Check configuration
        run: |
          echo "=== Deployment Configuration ==="
          echo "Project ID: $GCP_PROJECT_ID"
          echo "Region: $GCP_REGION"
          echo "Service Name: $SERVICE_NAME"
          echo "Commit SHA: $GITHUB_SHA"
          echo ""
          echo "=== Service Account ==="
          gcloud config list account --format "value(core.account)"
          echo ""
          echo "=== Required APIs Status ==="
          gcloud services list --enabled --format="value(NAME)" | grep -E "(run|build|artifactregistry)" || echo "Some APIs may not be enabled"

      - name: Enable required APIs
        run: |
          echo "Ensuring required APIs are enabled..."
          gcloud services enable run.googleapis.com
          gcloud services enable artifactregistry.googleapis.com
          gcloud services enable cloudbuild.googleapis.com

      - name: Create Artifact Registry Repository
        run: |
          echo "Creating Artifact Registry repository..."
          gcloud artifacts repositories create app \
            --repository-format=docker \
            --location=$GCP_REGION \
            --description="IntelliNews container repository" \
            --project=$GCP_PROJECT_ID 2>/dev/null || echo "Repository already exists (expected)"

      - name: Build and push container image
        run: |
          IMAGE_URI="$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/app/$SERVICE_NAME:$GITHUB_SHA"
          echo "Building image: $IMAGE_URI"
          
          # Configure docker for Artifact Registry
          gcloud auth configure-docker $GCP_REGION-docker.pkg.dev --quiet
          
          # Build and push with error handling
          if docker build -t "$IMAGE_URI" .; then
            echo "‚úÖ Docker build successful"
          else
            echo "‚ùå Docker build failed"
            exit 1
          fi
          
          if docker push "$IMAGE_URI"; then
            echo "‚úÖ Docker push successful"
          else
            echo "‚ùå Docker push failed"
            exit 1
          fi

      - name: Deploy to Cloud Run
        run: |
          IMAGE_URI="$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/app/$SERVICE_NAME:$GITHUB_SHA"
          echo "Deploying to Cloud Run: $SERVICE_NAME"
          
          gcloud run deploy $SERVICE_NAME \
            --image "$IMAGE_URI" \
            --region "$GCP_REGION" \
            --platform managed \
            --allow-unauthenticated \
            --port 8080 \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 10 \
            --timeout 300s \
            --quiet

      - name: Get service URL
        run: |
          SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$GCP_REGION --format="value(status.url)")
          echo "üöÄ IntelliNews deployed successfully!"
          echo "üåê Service URL: $SERVICE_URL"