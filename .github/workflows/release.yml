name: Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: "intellinews/package-lock.json"

      - name: Install dependencies
        run: npm ci
        working-directory: intellinews

      - name: Run tests
        run: npm test -- --watchAll=false
        working-directory: intellinews

      - name: Run build
        run: npm run build
        working-directory: intellinews

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Bump version in intellinews
        id: version_intellinews
        run: |
          cd intellinews
          NEW_VERSION=$(npm version ${{ github.event.inputs.version_type }} --no-git-tag-version)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "version_number=${NEW_VERSION#v}" >> $GITHUB_OUTPUT

      - name: Bump version in backend
        run: |
          cd backend
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version

      - name: Bump version in frontend
        run: |
          cd frontend
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version

      - name: Generate changelog
        id: changelog
        run: |
          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --oneline --pretty=format:"* %s" --no-merges)
          else
            COMMITS=$(git log ${LAST_TAG}..HEAD --oneline --pretty=format:"* %s" --no-merges)
          fi
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "## What's Changed" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Commit version changes
        run: |
          git add .
          git commit -m "chore: bump version to ${{ steps.version_intellinews.outputs.new_version }}"
          git push origin main

      - name: Create and push tag
        run: |
          git tag ${{ steps.version_intellinews.outputs.new_version }}
          git push origin ${{ steps.version_intellinews.outputs.new_version }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version_intellinews.outputs.new_version }}
          release_name: Release ${{ steps.version_intellinews.outputs.new_version }}
          body: |
            # IntelliNews Release ${{ steps.version_intellinews.outputs.new_version }}
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Version Information
            - IntelliNews App: ${{ steps.version_intellinews.outputs.version_number }}
            - Backend: ${{ steps.version_intellinews.outputs.version_number }}
            - Frontend: ${{ steps.version_intellinews.outputs.version_number }}
          draft: false
          prerelease: false

      - name: Deploy to Production
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          token_format: 'access_token'

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: backend
          region: ${{ secrets.GCP_REGION }}
          source: .
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          flags: "--allow-unauthenticated"
          env_vars: |
            VERSION=${{ steps.version_intellinews.outputs.version_number }}