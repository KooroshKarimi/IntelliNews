permissions:
  contents: 'read'
  id-token: 'write'

name: Bringee CI/CD (Improved)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: europe-west3
  GAR_LOCATION: europe-west3
  REPOSITORY: bringee-artifacts

jobs:
  test-and-build-backend:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [user-service, shipment-service]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Test
      run: |
        cd backend/services/${{ matrix.service }}
        go test -v ./...

    - name: Build
      run: |
        cd backend/services/${{ matrix.service }}
        go build -v -o server

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: test-and-build-backend
    if: github.ref == 'refs/heads/main'

    strategy:
      matrix:
        service: [user-service, shipment-service]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: 'Set up Docker Buildx'
      uses: docker/setup-buildx-action@v3

    - name: 'Authenticate to Google Cloud'
      id: auth
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: 'projects/${{ secrets.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
        service_account: '${{ secrets.GITHUB_ACTIONS_SA_EMAIL }}'
        create_credentials_file: true
        export_environment_variables: true

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: 'Configure Docker for GAR'
      run: |
        gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

    - name: 'Build and Push Docker image'
      uses: docker/build-push-action@v5
      with:
        context: ./backend/services/${{ matrix.service }}
        file: ./backend/services/${{ matrix.service }}/Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}/${{ matrix.service }}:${{ github.sha }}
          ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}/${{ matrix.service }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-to-cloud-run:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    if: github.ref == 'refs/heads/main'

    strategy:
      matrix:
        service: [user-service, shipment-service]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: 'projects/${{ secrets.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
        service_account: '${{ secrets.GITHUB_ACTIONS_SA_EMAIL }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ matrix.service }} \
          --image ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}/${{ matrix.service }}:latest \
          --region ${{ env.GCP_REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --port 8080 \
          --memory 512Mi \
          --cpu 1 \
          --max-instances 10 \
          --set-env-vars "ENVIRONMENT=production"

  deploy-terraform:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: 'projects/${{ secrets.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
        service_account: '${{ secrets.GITHUB_ACTIONS_SA_EMAIL }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5"

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: ./terraform
      run: terraform plan -var="gcp_project_id=${{ secrets.GCP_PROJECT_ID }}" -var="github_repository=${{ github.repository }}"

    - name: Terraform Apply
      working-directory: ./terraform
      run: terraform apply -auto-approve -var="gcp_project_id=${{ secrets.GCP_PROJECT_ID }}" -var="github_repository=${{ github.repository }}"

  deploy-frontend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'

    - name: Get dependencies
      working-directory: ./flutter
      run: flutter pub get

    - name: Build Flutter web app
      working-directory: ./flutter
      run: flutter build web --release

    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: 'projects/${{ secrets.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
        service_account: '${{ secrets.GITHUB_ACTIONS_SA_EMAIL }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Deploy to Firebase Hosting
      run: |
        if [ -f "flutter/firebase.json" ]; then
          cd flutter
          firebase deploy --only hosting --project ${{ secrets.GCP_PROJECT_ID }}
        else
          echo "Firebase configuration not found, skipping frontend deployment"
          exit 0
        fi